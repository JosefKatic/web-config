@use '@angular/material' as mat;
@use '@angular/material-experimental' as matx;
@use './app-theme';

$theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: mat.$yellow-palette,
      tertiary: mat.$green-palette,
    ),
  )
);

// Include material core styles.
@include mat.core();
@include mat.color-variants-backwards-compatibility($theme);
@include app-theme.theme($theme);

:root {
  @include mat.all-component-themes($theme);
}

.online {
  color: green;
}

.offline {
  color: red;
}

//@use "@angular/material" as mat;
//@use "@angular/material-experimental" as matx;
//@use 'material' as theme;
//
//
//@mixin themable-styles($theme) {
//  .tonal {
//    background-color: mat.get-theme-color($theme, secondary-container);
//    color: mat.get-theme-color($theme, on-secondary-container);
//  }
//
//  .filled-table {
//    --mat-table-row-item-outline-color: mat.get-theme-color($theme, on-secondary-container);
//    background-color: mat.get-theme-color($theme, secondary-container);
//    color: mat.get-theme-color($theme, on-secondary-container);
//    border-radius: 12px;
//    overflow: hidden;
//  }
//
//  * {
//    scrollbar-width: thin;
//    scrollbar-color: mat.get-theme-color($theme, secondary-container) transparent;
//  }
//
//  // Button color variants
//  .secondary-button {
//    @include mat.button-color($theme, $color-variant: secondary);
//  }
//
//  .tertiary-button {
//    @include mat.button-color($theme, $color-variant: tertiary);
//  }
//
//  .warn-button {
//    @include mat.button-color($theme, $color-variant: error);
//  }
//
//  .sidenav-selected > .mdc-list-item__primary-text {
//    color: mat.get-theme-color($theme, primary);
//  }
//
//  // Icon color variants
//  .primary-icon {
//    @include mat.icon-color($theme, $color-variant: primary);
//  }
//
//  .secondary-icon {
//    @include mat.icon-color($theme, $color-variant: secondary);
//  }
//
//  .tertiary-icon {
//    @include mat.icon-color($theme, $color-variant: tertiary);
//  }
//
//  .warn-icon {
//    @include mat.icon-color($theme, $color-variant: error);
//  }
//}
//
//html {
//  @include mat.all-component-themes(theme.$m3-default-dark-theme);
//
//  &.dark-theme {
//    @include themable-styles(theme.$m3-default-dark-theme);
//  }
//
//  &.light-theme {
//    @include mat.all-component-colors(theme.$m3-default-light-theme);
//    @include themable-styles(theme.$m3-default-light-theme);
//  }
//
//  @each $color, $palette in theme.$palettes {
//    &.#{$color}-dark {
//      @include mat.all-component-colors(map-get(theme.$theme-map, "m3-#{$color}-dark-theme"));
//      @include themable-styles(map-get(theme.$theme-map, "m3-#{$color}-dark-theme"));
//    }
//
//    &.#{$color}-light {
//      @include mat.all-component-colors(map-get(theme.$theme-map, "m3-#{$color}-light-theme"));
//      @include themable-styles(map-get(theme.$theme-map, "m3-#{$color}-light-theme"));
//    }
//  }
//}
//
//
////@use '@angular/material' as mat;
////@use '@angular/material-experimental' as matx;
////
//////@tailwind base;
//////@tailwind components;
//////@tailwind utilities;
////
////$m3-dark-theme: matx.define-theme(
////    (
////      color: (
////        theme-type: dark,
////        primary: matx.$m3-green-palette,
////      ),
////      typography: (
////        brand-family: 'Roboto',
////        bold-weight: 900
////      ),
////      density: (
////        scale: -1
////      )
////    )
////);
////
////$m3-light-theme: matx.define-theme(
////    (
////      color: (
////        primary: matx.$m3-green-palette,
////      ),
////      typography: (
////        brand-family: 'Roboto',
////        bold-weight: 900
////      ),
////      density: (
////        scale: -1
////      )
////    )
////);
////.dark-theme {
////  @include mat.all-component-themes($m3-dark-theme);
////}
////
////.light-theme {
////  @include mat.all-component-themes($m3-light-theme);
////}
//
html,
body {
  min-height: 100%;
  height: 100%;
  width: 100%;
}

body {
  margin: 0;
  font-family: 'Roboto', sans-serif;
}
